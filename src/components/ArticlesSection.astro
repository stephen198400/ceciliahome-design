---
import { Image } from 'astro:assets';
// 示例图片，实际项目中应该替换为实际文章图片
import modernBuildingImg from '../assets/adus/hero.jpg';
import { articles } from '../data/articles';

// 初始显示的文章数量
const initialArticlesCount = 6;
// 所有文章
const allArticles = articles;
// 初始显示的文章
const initialArticles = allArticles.slice(0, initialArticlesCount);
// 加载更多后显示的文章
const remainingArticles = allArticles.slice(initialArticlesCount);
---

<section class="py-16 bg-white">
  <div class="container mx-auto px-4">
    <h1 class="text-5xl font-bold mb-12">News</h1>
    
    <!-- 文章分类过滤器 -->
    <div class="flex flex-wrap gap-3 mb-12">
      <button class="filter-btn px-5 py-2 rounded-full bg-primary text-white" data-category="all">All</button>
      <button class="filter-btn px-5 py-2 rounded-full bg-gray-100 hover:bg-gray-200 transition-colors" data-category="Insights">Insights</button>
      <button class="filter-btn px-5 py-2 rounded-full bg-gray-100 hover:bg-gray-200 transition-colors" data-category="News">News</button>
      <button class="filter-btn px-5 py-2 rounded-full bg-gray-100 hover:bg-gray-200 transition-colors" data-category="Perspectives">Perspectives</button>
    </div>
    
    <!-- 文章网格 - 初始显示的文章 -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 md:gap-8" id="articles-grid">
      {initialArticles.map(article => (
        <div class="group article-card" data-category={article.category}>
          <a href={`/articles/${article.slug}`} class="block h-full hover:no-underline article-link">
            <div class="relative overflow-hidden rounded-lg mb-4">
              {article.imagePath ? (
                <Image 
                  src={modernBuildingImg} 
                  alt={article.title} 
                  class="w-full aspect-[4/3] object-cover transition-transform duration-500 group-hover:scale-105"
                />
              ) : (
                <div class="w-full aspect-[4/3] bg-gray-200"></div>
              )}
              <span class="absolute top-4 left-4 bg-white text-gray-800 text-sm font-medium px-3 py-1 rounded-md">
                {article.category}
              </span>
              {article.hasViewButton && (
                <div class="absolute bottom-4 right-4">
                  <span class="bg-white/80 backdrop-blur-sm text-gray-800 text-sm font-medium px-3 py-1 rounded-md">
                    + View
                  </span>
                </div>
              )}
            </div>
            <p class="text-gray-500 text-sm mb-2">{article.date}</p>
            <h3 class="text-xl font-bold hover:text-primary transition-colors">
              {article.title}
            </h3>
          </a>
        </div>
      ))}
    </div>
    
    <!-- 剩余的文章（初始状态为隐藏） -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 md:gap-8 mt-12 hidden" id="remaining-articles">
      {remainingArticles.map(article => (
        <div class="group article-card" data-category={article.category}>
          <a href={`/articles/${article.slug}`} class="block h-full hover:no-underline article-link">
            <div class="relative overflow-hidden rounded-lg mb-4">
              {article.imagePath ? (
                <Image 
                  src={modernBuildingImg} 
                  alt={article.title} 
                  class="w-full aspect-[4/3] object-cover transition-transform duration-500 group-hover:scale-105"
                />
              ) : (
                <div class="w-full aspect-[4/3] bg-gray-200"></div>
              )}
              <span class="absolute top-4 left-4 bg-white text-gray-800 text-sm font-medium px-3 py-1 rounded-md">
                {article.category}
              </span>
              {article.hasViewButton && (
                <div class="absolute bottom-4 right-4">
                  <span class="bg-white/80 backdrop-blur-sm text-gray-800 text-sm font-medium px-3 py-1 rounded-md">
                    + View
                  </span>
                </div>
              )}
            </div>
            <p class="text-gray-500 text-sm mb-2">{article.date}</p>
            <h3 class="text-xl font-bold hover:text-primary transition-colors">
              {article.title}
            </h3>
          </a>
        </div>
      ))}
    </div>
    
    <!-- 查看更多按钮 -->
    <div class="mt-12 text-center">
      <button 
        id="view-all-button"
        class="px-8 py-3 border-2 border-gray-900 text-gray-900 font-medium rounded-md hover:bg-gray-900 hover:text-white transition-colors"
      >
        View All Articles
      </button>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const viewAllButton = document.getElementById('view-all-button');
    const remainingArticles = document.getElementById('remaining-articles');
    const articlesContainer = document.getElementById('articles-grid');
    const filterButtons = document.querySelectorAll('.filter-btn');
    let articleCards = document.querySelectorAll('.article-card');
    let areRemainingArticlesVisible = false;
    
    // 加载更多文章功能
    if (viewAllButton && remainingArticles) {
      viewAllButton.addEventListener('click', () => {
        // 显示/隐藏剩余文章
        remainingArticles.classList.toggle('hidden');
        areRemainingArticlesVisible = !remainingArticles.classList.contains('hidden');
        
        // 更新按钮文本
        viewAllButton.textContent = areRemainingArticlesVisible ? 'Show Less' : 'View All Articles';
        
        // 应用当前活跃的过滤器
        const activeFilterButton = document.querySelector('.filter-btn.bg-primary');
        if (activeFilterButton) {
          const category = activeFilterButton.getAttribute('data-category') || 'all';
          filterArticles(category);
        }
        
        // 平滑滚动到新显示的文章
        if (areRemainingArticlesVisible) {
          remainingArticles.scrollIntoView({ behavior: 'smooth', block: 'start' });
        }
        
        // 更新文章卡片集合
        articleCards = document.querySelectorAll('.article-card');
      });
    }
    
    // 文章分类过滤功能
    function filterArticles(category: string) {
      articleCards.forEach(card => {
        const cardCategory = card.getAttribute('data-category');
        if (category === 'all' || category === cardCategory) {
          card.classList.remove('hidden');
        } else {
          card.classList.add('hidden');
        }
      });
    }
    
    // 只为过滤按钮添加事件监听器，避免与文章卡片点击冲突
    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        // 获取选中的分类
        const selectedCategory = button.getAttribute('data-category') || 'all';
        
        // 更新按钮样式
        filterButtons.forEach(btn => {
          btn.classList.remove('bg-primary', 'text-white');
          btn.classList.add('bg-gray-100', 'hover:bg-gray-200');
        });
        button.classList.remove('bg-gray-100', 'hover:bg-gray-200');
        button.classList.add('bg-primary', 'text-white');
        
        // 过滤文章
        filterArticles(selectedCategory);
        
        // 如果没有显示的文章或剩余文章过滤后为空，则显示提示信息
        if (articlesContainer) {
          const visibleInitialArticles = articlesContainer.querySelectorAll('.article-card:not(.hidden)');
          const visibleRemainingArticles = remainingArticles ? remainingArticles.querySelectorAll('.article-card:not(.hidden)') : [];
          
          if (visibleInitialArticles.length === 0 && 
              (!areRemainingArticlesVisible || visibleRemainingArticles.length === 0)) {
            if (document.getElementById('no-articles-message')) {
              const noArticlesMsg = document.getElementById('no-articles-message');
              if (noArticlesMsg) {
                noArticlesMsg.classList.remove('hidden');
              }
            } else {
              const noArticlesMessage = document.createElement('div');
              noArticlesMessage.id = 'no-articles-message';
              noArticlesMessage.className = 'text-center text-gray-500 py-8 col-span-full';
              noArticlesMessage.textContent = 'No articles found in this category.';
              articlesContainer.appendChild(noArticlesMessage);
            }
          } else {
            const noArticlesMsg = document.getElementById('no-articles-message');
            if (noArticlesMsg) {
              noArticlesMsg.classList.add('hidden');
            }
          }
        }
      });
    });
  });
</script> 